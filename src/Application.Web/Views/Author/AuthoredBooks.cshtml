@model Application.Shared.PaginatedList<Application.Shared.ReadBookDto>

<h2>Loan Books</h2>

@* <!-- Filter Form -->
<form method="get" action="/Book/LoanBooks" class="mb-4">
    <div class="form-group">
        <input type="text" 
                class="form-control"
                name="searchTerm"
               placeholder="Search by title" 
               value="@Context.Request.Query["searchTerm"]"
        />
    </div>

    <div class="form-group">
        <select class="form-control" name="category">

            <option value="">All Categories</option>

            @foreach (var category in ViewBag.Categories)
            {
                var isSelected = category == Context.Request.Query["category"] ? "selected" : "";

                if (isSelected == "selected"){

                    <option value="@category" selected>@category.</option>

                }else{

                    <option value="@category">@category</option>

                }
            }

        </select>

    </div>

    <button type="submit" class="btn btn-primary">Filter</button>

</form>

 *@


 <!-- Book Cards Grid -->
<div class="row">
    @foreach (var book in Model)
    {
        <div class="col-md-4 mb-4">
            <div class="card h-100">
                <img src="@book.CoverUrl"
                    class="card-img-top" 
                    alt="Cover Image" 
                    style="height: 200px; object-fit: cover;"
                 />
                <div class="card-body">
                    <h5 class="card-title">@book.Title</h5>
                    <p class="card-text">
                        <strong>Author:</strong> @book.AuthorName <br />
                        <strong>Available Copies:</strong> @book.AvailableCopies<br />

                        <!-- Availability Status with Color -->
                        <span style="color:@(book.AvailableCopies > 0 ? "green" : "red")">
                            @(book.AvailableCopies > 0 ? "Available" : "Not Available")
                        </span>

                    </p>

                </div>
                <div class="card-footer text-center">

                    @if (User.IsInRole("Admin") || User.IsInRole("Author")){

                        <!-- Admin/Author can edit or delete -->
                        <form asp-controller="Book" asp-action="EditBook">
                            <input type="hidden" name="bookId" value="@book.Id" />
                            <button type="submit" class="btn btn-primary">Edit</button>
                        </form>

                        <form asp-controller="Book" asp-action="DeleteBook">
                            <input type="hidden" name="bookId" value="@book.Id" />
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    }
                    else if (User.IsInRole("Member") && book.AvailableCopies > 0){

                        <!-- Members can loan if available -->
                        <form asp-action="LoanBook" asp-asp-controller="Book">
                            <input type="hidden" name="bookId" value="@book.Id" />
                            <button type="submit" class="btn btn-success">Loan Book</button>
                        </form>
                    }
                    else{
                        <button class="btn btn-secondary" disabled>Not Available</button> 
                    }
                </div>
            </div>
        </div>
    }
</div>

<!-- Pagination controls -->
<nav aria-label="Page navigation">

    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" href="?page=@(Model.PageIndex - 1)&searchTerm=@Context.Request.Query["searchTerm"]&category=@Context.Request.Query["category"]" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }

        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" href="?page=@i&searchTerm=@Context.Request.Query["searchTerm"]&category=@Context.Request.Query["category"]">@i</a>
            </li>
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" href="?page=@(Model.PageIndex + 1)&searchTerm=@Context.Request.Query["searchTerm"]&category=@Context.Request.Query["category"]" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }

    </ul>
</nav>
